% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mp.r
\name{get_data_cspro}
\alias{get_data_cspro}
\title{Leer-CSpro}
\usage{
get_data_cspro(
  tab_dict = character(),
  dat_dict,
  columnas = character(),
  clase_col = character(),
  sin_borrado = TRUE,
  nreg = -1,
  ...
)
}
\arguments{
\item{tab_dict}{character: nombre de la tabla en la base de datos}

\item{dat_dict}{data.frame: diccionario de datos con las columnas
variable y length (caracteres ocupados por la variable)}

\item{columnas}{character: nombre que se le asignarán a las
variables en el resultado}

\item{clase_col}{character: tipo de vector de la variable
(character, integer, real, ...). Opcional.}

\item{sin_borrado}{logical: excluye los registros marcados como
borrados?. Por omisión, TRUE}

\item{nreg}{integer: número de registros a devolver. Por omisión,
todos (nreg = -1)}

\item{...}{character: Argumentos para establecer la conexión (host,
dbname, userid, password) o la conexión si ya fue establecida
(conn)}
}
\value{
data.frame o NULL
}
\description{
Leer los datos de las variables de una encuesta que ha
sido digitada con CSpro o CSentry
}
\details{
En la base de datos de Cspro cada encuesta está almacenada
en una sola tabla. El campo "questionnaire" trae los datos de
las variables en el cuestionario de la encuesta. Cada elemento
de ese campo corresponde a un cuestionario, y consiste de una
sola ristra de caracteres dentro de la cual los datos de una
variable ocupan una posición y un número de caracteres
determinado, ambos definidos en el "diccionario de datos". Para
cargar los datos en un data.frame, la función manda escribir
cada elemento de "questionnaire" como una línea de un archivo
temporal, y después lee la secuencia de caracteres asociada a
los datos de cada variable, con la función read.fwf. Tener
presente que cspro utiliza un campo al inicio (de longitud 1)
para indicar el tipo de registro. Ver ayuda de read.fwf acerca
del uso de longitudes negativas para "saltar" variables
}
\examples{
\donttest{
x <- get_data_cspro("caracterizacion_dict",
                    dat_dict = dicc,
                    columnas = c("reg", "quest", "tecnico",
                                 "copiade", "cx", "cy",
                                 "informante"),
                    conn = conn_mysql())
x <- get_data_cspro("caracterizacion_dict",
                    dat_dict = dicc,
                    columnas = c("quest", "tecnico", "copiade",
                                 "cx", "cy", "informante"),
                    host = Sys.getenv("host"), user = "eddy",
                    dbname = "bd", password = Sys.getenv("pwd"))}
}
\seealso{
conn_mysql, par_conn_mysql
}
